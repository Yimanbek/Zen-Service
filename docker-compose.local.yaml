services:
  db:
    image: postgres:14
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_USER: ${USER}
      POSTGRES_PASSWORD: ${PASSWORD}
      POSTGRES_DB: ${NAME}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/

  web:
    build: 
      context: .
      dockerfile: ./docker/dockerfile.local
    depends_on:
      db:
        condition: service_healthy
    container_name: django-ZEN
    restart: always
    ports:
      - "8000:8000"
  
  migrations:
    build: 
      context: .
      dockerfile: ./docker/dockerfile.local
    command: >
      sh -c "python manage.py makemigrations &&
             python manage.py migrate"
    depends_on:
      db:
        condition: service_healthy
    container_name: migrations
    restart: always

  test-db:
    image: postgres:14
    container_name: test_postgres_db
    restart: always
    env_file: 
      - .env 
    environment:
      POSTGRES_USER: ${USER}
      POSTGRES_PASSWORD: ${PASSWORD}
      POSTGRES_DB: ${TEST_DB_NAME}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${TEST_DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "5433:5432"
    volumes:
      - test_pgdata:/var/lib/postgresql/data
    depends_on:
      - db

  test-runner:
    build: 
      context: .
      dockerfile: ./docker/dockerfile.local
    command: >
      sh -c "pytest"
    depends_on:
      test-db:
        condition: service_healthy
    environment:
      DATABASE_URL: ${TEST_DATABASE_URL}
    container_name: django-ZEN-Tests
    restart: no

volumes:
  pgdata:
  test_pgdata: